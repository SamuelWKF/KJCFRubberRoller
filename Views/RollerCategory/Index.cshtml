@model IPagedList<KJCFRubberRoller.Models.RollerCategory>
@using PagedList;
@using PagedList.Mvc;
@using KJCFRubberRoller.Models;
@{
    ViewBag.Title = "Roller Category List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row mb-4">
        <div class="col-md-12 mx-auto">
            <div class="py-2 bg-kjcf">
                <h2 class="text-white text-center">Rubber Roller Category List</h2>
            </div>
            <div class="bg-white container py-3">
                @Html.Label("Search:")
                @Html.TextBox("Search", "", htmlAttributes: new { @class = "form-control roller_category_search", placeholder = "Search roller category here..." })
                <br />
                <table class="table w-100 table-hover table-striped sortable">
                    <tr class="text-center">
                        <th>
                            No.
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().size)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().minAmount)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().criticalStatus)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().remark)
                        </th>
                        <th>Edit Details</th>
                    </tr>


                    @if (Model.FirstOrDefault() == null)
                    {
                        <tr><td colspan="7" class="text-center">There are currently no rubber roller category record.</td></tr>
                    }

                    @if (Model != null)
                    {
                        foreach (var item in Model.Select((value, index) => new { value, index }))
                        {
                            <tr class="text-center">
                                <td>
                                    @(item.index + 1)
                                </td>
                                <td class="text-left">
                                    @Html.DisplayFor(modelItem => item.value.description)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.value.size)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.value.minAmount)
                                </td>
                                <td>
                                    @{
                                        var status = RollerCat.getCriticalStatus(item.value.criticalStatus);
                                    }
                                    @status
                                </td>
                                <td class="text-left">
                                    @Html.DisplayFor(modelItem => item.value.remark)
                                </td>
                                <td class="text-center">
                                    <a href="@Url.Action("Edit", "RollerCategory", new { id = item.value.rollerCategoryID })" class="btn btn-success">
                                        <i class='far fa-edit'></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                </table>
                @Html.PagedListPager(Model, i => Url.Action("Index", "RollerCategory", new { i }))
            </div>
        </div>
    </div>
</div>

<script>
    // IIFE (Immediately Invoked Function Expression)
    (function () {
        // Select the search input box for each of the table list
        const searchBox = document.querySelector('input.roller_category_search');
        // Add event listeners to each search box
        searchBox.addEventListener('input', (e) => {
            const rollerCategoryTable = document.querySelector('.table').children[1].children;
            Array.from(rollerCategoryTable).forEach((v, i) => {
                if (v.innerText.toLowerCase().indexOf(searchBox.value.toLowerCase()) !== -1) {
                    v.style.removeProperty('display');
                } else {
                    v.style.display = 'none';
                }
            });
        });
    })();
</script>
