@model IPagedList<KJCFRubberRoller.Models.RubberRoller>
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "All Rubber Roller Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mb-4">
    <div class="col-md-11 mx-auto">
        <div class="py-2 mt-4 bg-kjcf">
            <h2 class="text-white text-center">Rubber Roller List</h2>
        </div>
        <div class="bg-white container-fluid py-3">
            @Html.Label("Search:")
            @Html.TextBox("Search", "", htmlAttributes: new { @class = "form-control rr_list_search", placeholder = "Search rubber roller here..." })
            <br />
            <table class="table table-responsive table-hover table-striped sortable">
                <thead>
                    <tr class="text-center">
                        <th>
                            No.
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().rollerID)
                        </th>
                        <th>
                            Roller Category
                        </th>
                        <th>On Supplier<br />Hand</th>
                        <th>
                            Available<br />at KJCF
                        </th>
                        <th>
                            Remark
                        </th>
                        <th width="5%">
                            Status
                        </th>
                        <th width="5%">Operation<br />Line No.</th>
                        <th width="5%">Edit<br />Details</th>
                        <th width="5%">Location<br />History</th>
                        <th width="5%">Maintenance<br />History</th>
                        <th width="5%">Operation<br />History</th>
                    </tr>
                </thead>

                @if (Model.FirstOrDefault() == null)
                {
                    <tr><td colspan="12" class="text-center">There are currently no rubber roller record.</td></tr>
                }

                @if (Model != null)
                {
                    foreach (var item in Model.Select((value, index) => new { value, index }))
                    {
                        <tr>
                            <td>
                                @(item.index + 1)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.rollerID)
                            </td>
                            <td>
                                @{
                                    var rollerCat = string.Format("{0} - {1}", item.value.RollerCategory.size, item.value.RollerCategory.description);
                                }
                                @rollerCat
                            </td>
                            <td>
                                @if (item.value.RollerLocations.LastOrDefault() != null)
                                {
                                    @Html.Display(item.value.RollerLocations.LastOrDefault().location)
                                }
                            </td>
                            <td class="text-center">
                                @{
                                    string locat = "-";
                                    var rollLocation = item.value.RollerLocations.LastOrDefault();
                                    if (rollLocation != null)
                                    {
                                        if (rollLocation.operationLine == 0)
                                        {
                                            locat = rollLocation.location;
                                        }
                                    }
                                }
                                @locat
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.value.remark)
                            </td>
                            <td class="text-center">
                                @Html.DisplayFor(modelItem => item.value.status)
                            </td>
                            <td class="text-center">
                                @{
                                    string location = "-";
                                    var rollerLocation = item.value.RollerLocations.LastOrDefault();
                                    if (rollerLocation != null)
                                    {
                                        if (rollerLocation.operationLine != 0)
                                        {
                                            location = $"L{rollerLocation.operationLine}";
                                        }
                                    }
                                }
                                @location
                            </td>
                            <td class="text-center">
                                <a href="@Url.Action("Edit", "RubberRoller", new { id = item.value.id })" class="btn btn-success">
                                    <i class='far fa-edit'></i>
                                </a>
                            </td>
                            <td class="text-center">
                                <a href="@Url.Action("LocationHistory", "RubberRoller", new { id = item.value.id })" class="btn btn-success">
                                    <i class="fas fa-map-marker-alt"></i>
                                </a>
                            </td>
                            <td class="text-center">
                                <a href="@Url.Action("MaintenanceHistory", "RubberRoller", new { id = item.value.id })" class="btn btn-success">
                                    <i class="fas fa-tools"></i>
                                </a>
                            </td>
                            <td class="text-center">
                                <a href="@Url.Action("OperationHistory", "RubberRoller", new { id = item.value.id })" class="btn btn-success">
                                    <i class="fas fa-cogs"></i>
                                </a>
                            </td>
                        </tr>
                    }
                }
            </table>
            @Html.PagedListPager(Model, i => Url.Action("Index", "RubberRoller", new { i }))
        </div>
    </div>
</div>


<script>
    // IIFE (Immediately Invoked Function Expression)
    (function () {
        // Select the search input box for each of the table list
        const searchBox = document.querySelector('input.rr_list_search');
        // Add event listeners to each search box
        searchBox.addEventListener('input', (e) => {
            const rubberRollerTable = document.querySelector('.table').children[1].children;
            Array.from(rubberRollerTable).forEach((v, i) => {
                if (v.innerText.toLowerCase().indexOf(searchBox.value.toLowerCase()) !== -1) {
                    v.style.removeProperty('display');
                } else {
                    v.style.display = 'none';
                }
            });
        });
    })();
</script>
