@model IPagedList<KJCFRubberRoller.Models.RollerCategory>
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "Roller Stock Overview";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string rollerSupplierStatus = "On Supplier Hand (Repair/Refurbish)";
}

<div class="container">
    <div class="row mb-4">
        <div class="mx-auto">
            <div class="py-2 bg-kjcf">
                <h2 class="text-white text-center">Rubber Roller Stock Overview</h2>
            </div>
            <div class="bg-white container py-3">
                @if (TempData["totalBelowMinAmount"] != null)
                {
                    <div class="alert alert-danger fade show" role="alert">
                        <b>ALERT: @TempData["totalBelowMinAmount"] roller(s)</b> has hit the minimum roller amount threshold.
                    </div>
                }

                @Html.Label("Search:")
                @Html.TextBox("Search", "", htmlAttributes: new { @class = "form-control stock_overview_search", placeholder = "Search roller category here..." })
                <br />
                <table class="table table-responsive table-hover table-striped sortable">
                    <tr class="text-center">
                        <th>
                            No.
                        </th>
                        <th class="text-left">
                            Roller Category<br />Description
                        </th>
                        <th>
                            Minimum<br />Roller Amount
                        </th>
                        <th>
                            Total<br />Actual Roller
                        </th>
                        <th>
                            Available Stock<br />at KJCF
                        </th>
                        <th>
                            On Supplier<br />Hand
                        </th>
                        <th>View Rollers</th>
                    </tr>

                    @if (Model.FirstOrDefault() == null)
                    {
                        <tr><td colspan="7" class="text-center">There are currently no rubber rollers stock record.</td></tr>
                    }

                    @if (Model.FirstOrDefault() != null)
                    {
                        foreach (var item in Model.Select((value, index) => new { value, index }))
                        {
                            <tr class="text-center @((item.value.RubberRollers.Count < item.value.minAmount) ? "text-danger font-weight-bold" : "")">
                                <td>
                                    @(item.index + 1)
                                </td>
                                <td class="text-left">
                                    @string.Format("{0} - {1}", item.value.size, item.value.description)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.value.minAmount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.value.RubberRollers.Count)
                                </td>
                                <td>
                                    @string.Format("{0}", item.value.RubberRollers.Where(r => r.status != rollerSupplierStatus).Count())
                                </td>
                                <td>
                                    @string.Format("{0}", item.value.RubberRollers.Where(r => r.status == rollerSupplierStatus).Count())
                                </td>
                                <td class="text-center">
                                    <a href="@Url.Action("StockDetails", "RubberRoller", new { id = item.value.rollerCategoryID })" class="btn btn-block btn-success">
                                        <i class="far fa-eye"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                </table>
                @Html.PagedListPager(Model, i => Url.Action("StockOverview", "RubberRoller", new { i }))
            </div>
        </div>
    </div>
</div>

<script>
    // IIFE (Immediately Invoked Function Expression)
    (function () {
        // Select the search input box for each of the table list
        const searchBox = document.querySelector('input.stock_overview_search');
        // Add event listeners to each search box
        searchBox.addEventListener('input', (e) => {
            const stockOverviewTable = document.querySelector('.table').children[1].children;
            Array.from(stockOverviewTable).forEach((v, i) => {
                if (v.innerText.toLowerCase().indexOf(searchBox.value.toLowerCase()) !== -1) {
                    v.style.removeProperty('display');
                } else {
                    v.style.display = 'none';
                }
            });
        });
    })();
</script>
