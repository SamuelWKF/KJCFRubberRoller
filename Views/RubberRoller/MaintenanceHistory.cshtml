@model IPagedList<KJCFRubberRoller.Models.Maintenance>
@using PagedList;
@using PagedList.Mvc;
@Styles.Render("~/Content/tableBtn")

@{
    ViewBag.Title = $"{ViewData["rollerID"]} Maintenance History";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mb-4">
    <div class="col-md-11 mx-auto">
        <div class="py-2 mt-4 bg-kjcf">
            <h2 class="text-white text-center">Maintenance History for Roller @ViewData["rollerID"]</h2>
        </div>
        <div class="bg-white container-fluid py-3">
            @Html.Label("Search:")
            @Html.TextBox("Search", "", htmlAttributes: new { @class = "form-control rr_location_search", placeholder = "Search location record here..." })
            <br />
            <table class="table table-hover table-striped sortable">
                <thead>
                    <tr class="text-center">
                        <th>
                            Date
                        </th>
                        <th>
                            Title
                        </th>
                        <th>
                            Sent to Supplier
                        </th>
                        <th>
                            Reason
                        </th>
                        <th>
                            Corrective Action
                        </th>
                        <th>Diameter Roller</th>
                        <th>New Diameter</th>
                        <th>
                            Total Mileage
                        </th>
                        <th>
                            View Detail
                        </th>
                    </tr>
                </thead>
                @if (Model.FirstOrDefault() == null)
                {
                    <tr><td colspan="9" class="text-center">There are currently no maintenance history record.</td></tr>
                }

                @if (Model != null)
                {
                    foreach (var item in Model.Select((value, index) => new { value, index }))
                    {
                        <tr>
                            <td class="text-center">
                                @item.value.approveDateTime.Value.ToString("dd-MMM-yyyy")
                            </td>
                            <td class="text-center">
                                @item.value.title
                            </td>
                            <td class="text-center px-2">
                                @item.value.sendTo
                            </td>
                            <td class="text-justify px-2">
                                @item.value.reason
                            </td>
                            <td class="text-justify px-2">
                                @item.value.correctiveAction
                            </td>
                            <td class="text-center px-2">
                                @item.value.diameterRoller mm
                            </td>
                            <td class="text-center px-2">
                                @item.value.newDiameter mm
                            </td>
                            <td class="text-center">
                                @item.value.totalMileage
                            </td>
                            <td class="text-center">
                                <a href="/maintenance/@item.value.maintenanceID/view" class="btn w-25 btn-success">
                                    <i class="far fa-eye"></i>
                                </a>
                            </td>
                        </tr>
                    }
                }
            </table>
            @Html.PagedListPager(Model, i => Url.Action("Index", "RubberRoller", new { i }))
        </div>
    </div>
</div>


<script>
    // IIFE (Immediately Invoked Function Expression)
    (function () {
        // Select the search input box for each of the table list
        const searchBox = document.querySelector('input.rr_location_search');
        // Add event listeners to each search box
        searchBox.addEventListener('input', (e) => {
            const table = document.querySelector('.table').children[1].children;
            Array.from(table).forEach((v, i) => {
                if (v.innerText.toLowerCase().indexOf(searchBox.value.toLowerCase()) !== -1) {
                    v.style.removeProperty('display');
                } else {
                    v.style.display = 'none';
                }
            });
        });
    })();
</script>

