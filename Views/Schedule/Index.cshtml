@model IPagedList<KJCFRubberRoller.Models.Schedule>
@using PagedList;
@using PagedList.Mvc;
@using KJCFRubberRoller.Models;

@{
    ViewBag.Title = "Schedule List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <div class="row mb-4">
        <div class="mx-auto">
            <div class="py-2 bg-kjcf">
                <h2 class="text-white text-center">Rubber Roller Schedule List</h2>
            </div>
            <div class="bg-white container py-3">
                @Html.ActionLink("Add New Schedule", "Create", null, new { @class = "btn btn-block btn-primary" })
                <br />
                @Html.Label("Search:")
                @Html.TextBox("Search", "", htmlAttributes: new { @class = "form-control sched_search", placeholder = "Search schedule here..." })
                <br />
                <table class="table table-responsive table-hover sortable">
                    <tr class="text-center">
                        <th>
                            No.
                        </th>
                        <th>@Html.DisplayNameFor(model => model.First().rollerID)</th>
                        <th>@Html.DisplayNameFor(model => model.First().quantity)</th>
                        <th>@Html.DisplayNameFor(model => model.First().tinplateSize)</th>
                        <th>@Html.DisplayNameFor(model => model.First().product)</th>
                        <th>@Html.DisplayNameFor(model => model.First().startMileage)</th>
                        <th>@Html.DisplayNameFor(model => model.First().endMileage)</th>
                        <th>@Html.DisplayNameFor(model => model.First().remark)</th>
                    </tr>

                    @foreach (var item in Model.Select((value, index) => new { value, index }))
                    {
                        <tr>
                            <th>@(item.index + 1)</th>
                            <th>@Html.DisplayFor(modelItem => item.value.rollerID)</th>
                            <th>@Html.DisplayFor(modelItem => item.value.quantity)</th>
                            <th>@Html.DisplayFor(modelItem => item.value.tinplateSize)</th>
                            <th>@Html.DisplayFor(modelItem => item.value.product)</th>
                            <th>@Html.DisplayFor(modelItem => item.value.startMileage)</th>
                            <th>@Html.DisplayFor(modelItem => item.value.endMileage)</th>
                            <th>@Html.DisplayFor(modelItem => item.value.remark)</th>
                            <th>
                                @Html.ActionLink("Edit Details", "Edit", new { id = item.value.scheduleID }, new { @class = "btn btn-block btn-success" })
                            </th>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    // IIFE (Immediately Invoked Function Expression)
    (function () {
        // Select the search input box for each of the table list
        const searchBox = document.querySelector('input.sched_search');
        // Add event listeners to each search box
        searchBox.addEventListener('input', (e) => {
            const table = document.querySelector('.table').children[1].children;
            Array.from(table).forEach((v, i) => {
                if (v.innerText.toLowerCase().indexOf(searchBox.value.toLowerCase()) !== -1) {
                    v.style.removeProperty('display');
                } else {
                    v.style.display = 'none';
                }
            });
        });
    })();
</script>