@model IPagedList<KJCFRubberRoller.Models.Maintenance>
@using PagedList;
@using PagedList.Mvc;
@using KJCFRubberRoller.Models
@Styles.Render("~/Content/tableBtn")
@{
    ViewBag.Title = "All Maintenance Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row mb-4">
    <div class="col-md-11 mx-auto">
        <div class="py-2 mt-4 bg-kjcf">
            <h2 class="text-white text-center">All Maintenance Report</h2>
        </div>
        <div class="bg-white container-fluid py-3">

            @if (TempData["formStatus"] != null)
            {
                <div class="alert @((bool)TempData["formStatus"] == true ? "alert-success" : "alert-danger") alert-dismissible fade show pb-2" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                        <span class="sr-only">Close</span>
                    </button>
                    @Html.Raw(TempData["formStatusMsg"])
                </div>
            }

            @Html.Label("Search:")
            @Html.TextBox("Search", "", htmlAttributes: new { @class = "form-control maintenance_list_search", placeholder = "Search rubber roller here..." })
            <br />
            <table class="table table-hover table-striped sortable">
                <thead>
                    <tr class="text-center">
                        <th>
                            No.
                        </th>
                        <th>
                            Roller ID
                        </th>
                        <th>
                            Send To
                        </th>
                        <th>
                            Reason
                        </th>
                        <th>
                            Reported Date Time
                        </th>
                        <th>Reported By</th>
                        <th>
                            Approved Date time
                        </th>
                        <th>
                            Approved By
                        </th>
                        <th width="10%">
                            Status
                        </th>
                        <th>
                            View
                        </th>
                        <th>
                            Edit<br />Details
                        </th>
                        <th>
                            Mark Roller<br />Received
                        </th>
                    </tr>
                </thead>
                @if (Model.FirstOrDefault() == null)
                {
                    <tr><td colspan="11" class="text-center">There are currently no maintenance record.</td></tr>
                }

                @if (Model != null)
                {
                    foreach (var item in Model.Select((value, index) => new { value, index }))
                    {
                        <tr class="text-center">
                            <td>
                                @(item.index + 1)
                            </td>
                            <td>@Html.DisplayFor(m => item.value.RubberRoller.rollerID)</td>
                            <td>@Html.DisplayFor(m => item.value.sendTo)</td>
                            <td class="text-justify px-2">@Html.DisplayFor(m => item.value.reason)</td>
                            <td>
                                @item.value.reportDateTime.Value.ToString("dd-MMM-yyyy")
                                @item.value.reportDateTime.Value.ToString("hh:mm tt")
                            </td>
                            <td>@Html.DisplayFor(m => item.value.reportedBy.name)</td>
                            @{
                                var date = item.value.approveDateTime == null ? "-" : item.value.approveDateTime.ToString();
                            }
                            <td>@date</td>
                            @{
                                var name = item.value.verfiedBy == null ? "-" : item.value.verfiedBy.name;
                            }
                            <td>@name</td>
                            @{
                                var status = RollerMaintenance.getStatus(item.value.status);
                            }
                            @if (item.value.status == RollerMaintenance.APPROVED)
                            {
                                <td class="font-weight-bold text-success">@status</td>
                            }
                            else if (item.value.status == RollerMaintenance.PENDING_APPROVAL)
                            {
                                <td class="text-warning font-weight-bold">@status</td>
                            }
                            else if (item.value.status == RollerMaintenance.REJECTED)
                            {
                                <td class="font-weight-bold text-danger">@status</td>
                            }
                            else if (item.value.status == RollerMaintenance.COMPLETED)
                            {
                                <td class="font-weight-bold text-primary">@status</td>
                            }
                            <td class="text-center">
                                <a href="/maintenance/@item.value.maintenanceID/view" style="width:60%" class="btn btn-success">
                                    <i class="far fa-eye"></i>
                                </a>
                            </td>
                            <td class="text-center">
                                @if (item.value.status == 1)
                                {
                                    <a href="/maintenance/@item.value.maintenanceID/edit" style="width:50%" class="btn btn-success">
                                        <i class='far fa-edit'></i>
                                    </a>
                                }
                            </td>
                            <td class="text-center">
                                @if (item.value.status == 2)
                                {
                                    <button type="button" style="width:50%" class="btn btn-success" data-toggle="modal" data-target="#markRollerReceivedModal">
                                        <i class='far fa-edit'></i>
                                    </button>
                                }
                            </td>
                        </tr>

                        if (item.value.status == 2)
                        {
                            <!-- Roller Received modal -->
                            <div class="modal fade" data-backdrop="static" id="markRollerReceivedModal" tabindex="-1" role="dialog" aria-labelledby="modelTitleId" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">Mark Roller Received</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        @using (Html.BeginForm("RollerReceived", "Maintenance", FormMethod.Post))
                                        {
                                            @Html.AntiForgeryToken()
                                            <div class="modal-body">
                                                Confirm to mark roller received back from maintenance?<br /><br />
                                                Please enter roller rack location after received.
                                                <div class="form-group">
                                                    <input type="text" class="form-control" id="rackLocation" name="rackLocation" placeholder="Enter roller rack location after received" required="required" />
                                                </div>
                                            </div>

                                            @Html.Hidden("maintenanceID", item.value.maintenanceID)
                                            <div class="modal-footer">
                                                <button type="submit" class="btn btn-success" style="padding:0.375rem 0.75rem !important;">Confirm Roller Received</button>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }
            </table>
            @Html.PagedListPager(Model, i => Url.Action("Index", "RubberRoller", new { i }))
        </div>
    </div>
</div>


<script>
    // IIFE (Immediately Invoked Function Expression)
    (function () {
        document.querySelector('.rSize').addEventListener('keyup', (e) => {
            e.target.value = e.target.value.toUpperCase();
        });

        // Select the search input box for each of the table list
        const searchBox = document.querySelector('input.maintenance_list_search');
        // Add event listeners to each search box
        searchBox.addEventListener('input', (e) => {
            const table = document.querySelector('.table').children[1].children;
            Array.from(table).forEach((v, i) => {
                if (v.innerText.toLowerCase().indexOf(searchBox.value.toLowerCase()) !== -1) {
                    v.style.removeProperty('display');
                } else {
                    v.style.display = 'none';
                }
            });
        });
    })();
</script>
